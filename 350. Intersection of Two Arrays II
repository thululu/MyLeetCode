//unordered_map 哈希法
class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int> dict;
        vector<int> res;
        for (int i=0;i<(int)nums1.size();i++)
            dict[nums1[i]]++;
        for(int i=0;i<(int)nums2.size();i++)
        {
            if( (dict[nums2[i]]--)>0) res.push_back(nums2[i]);
        }
        return res;
        
    }
};

//双指针法
class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        vector<int> res;
        sort(nums1.begin(),nums1.end());
        sort(nums2.begin(),nums2.end());
        int n1 = (int)nums1.size(), n2 = (int)nums2.size();
        int i1 = 0, i2 = 0;
        while(i1<n1&&i2<n2)
        {
            if(nums1[i1]==nums2[i2])
            {
                res.push_back(nums1[i1]);
                i1++;
                i2++;
            }
            else if(nums1[i1]<nums2[i2]) i1++;
            else i2++;
        }
        return res;
        
        
    }
};

